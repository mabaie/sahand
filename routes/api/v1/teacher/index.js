'use strict';
const router = require('express').Router();
const authorization = require('../../../../middlewares/authorization');
const managerAuthorization = require('../../../../services/authorizators/manager');
const appValidator = require('../../../../middlewares/appValidator');
const addُTeacherValidator = require('../../../../validators/addTeacher');
const addTeacherErrorHandler = require('../../../../controllers/Error/addTeacher');
const addTeacherController = require('../../../../controllers/add/teacher');
const getTeachersListController = require('../../../../controllers/get/teachersList');
const getTeachersController = require('../../../../controllers/get/teachers');
const managersValidator = require('../../../../validators/managers.js');
const managersErrorHandler = require('../../../../controllers/Error/managers');
const deleteManagerValidator = require('../../../../validators/deleteManager');
const deleteManagerErrorHandleer = require('../../../../controllers/Error/deleteManager');
const deleteTeacherController = require('../../../../controllers/delete/teacher');
const updateTeacherValidator = require('../../../../validators/updateTeacher');
const updateTeacherErrorHandler = require('../../../../controllers/Error/updateTeacher');
const updateTeacherController = require('../../../../controllers/update/teacher');
const idValidator = require('../../../../middlewares/idValidator');
const getTeacherController = require('../../../../controllers/get/teacher');
const addExistedTeacher = require('../../../../controllers/update/existedTeacher');

router.post('/teacher', authorization(managerAuthorization), appValidator(addُTeacherValidator, addTeacherErrorHandler), addTeacherController, addExistedTeacher);
router.post('/teachers', authorization(managerAuthorization), appValidator(managersValidator, managersErrorHandler), getTeachersController);
router.get('/teachers', authorization(managerAuthorization), getTeachersListController);
router.patch('/teacher/:id', authorization(managerAuthorization), appValidator(updateTeacherValidator, updateTeacherErrorHandler), updateTeacherController);
router.get('/teacher/:id', authorization(managerAuthorization), idValidator, getTeacherController);
router.delete('/teacher', authorization(managerAuthorization), appValidator(deleteManagerValidator, deleteManagerErrorHandleer), deleteTeacherController);
module.exports = router;